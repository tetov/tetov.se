{"version":3,"file":"component---src-pages-markdown-remark-fields-slug-tsx-58d70a82a73340802f7c.js","mappings":"iMAsDA,UA7CyC,SAACA,GAAU,cAC5CC,EAAQ,UAAGD,EAAME,KAAKC,sBAAd,iBAAGC,EAA2BC,cAA9B,aAAGC,EAAmCL,SAEpD,IAAKA,EACH,MAAM,IAAIM,MAAM,qCAGlB,IAcMC,EAd8D,CAClEC,MAAO,CACLC,aAAc,UACdC,YAAa,YACbC,aAAc,cACdC,KAAI,UAAEb,EAAME,KAAKC,sBAAb,aAAEW,EAA2BC,YAAYF,MAE/CG,MAAO,CACLN,aAAc,UACdC,YAAa,eACbC,aAAc,UAIqBX,GAEvC,IAAKO,EACH,MAAM,IAAID,MAAJ,yCAAmDN,GAG3D,IAAME,EAAiBH,EAAME,KAAKC,eAElC,OACEc,EAAAA,cAACC,EAAAA,EAAD,KACED,EAAAA,cAACE,EAAAA,EAAD,eACEC,SAAUpB,EAAMqB,SAASD,SACzBE,KAAMnB,EAAemB,KACrBC,MAAOpB,EAAeY,YAAYQ,MAClCC,gBAAe,UACbrB,EAAeY,YAAYU,aADd,iBACbC,EAAkCC,uBADrB,aACbC,EAAmDC,cAErDC,UAAU3B,aAAAA,EAAAA,EAAgBY,YAAYe,gBAAYC,GAC9CvB,IAvCZ,EA+CO,IAAMwB,EAA0C,SAAC,GAKlD,IAJQZ,EAIR,EAJJC,SAAYD,SAIR,IAHJlB,KACEC,eAAkBY,EAEhB,EAFgBA,YAAakB,EAE7B,EAF6BA,QAG3BC,EAAWnB,EAAYU,MACvBU,EAAWpB,EAAYqB,oBAE7B,OACEnB,EAAAA,cAACoB,EAAAA,EAAD,CACEjB,SAAUA,EACVc,SAAUA,EACVI,UAAWvB,EAAYQ,MACvBgB,YAAaxB,EAAYwB,aAAeN,GAAW,IAEnDhB,EAAAA,cAAAA,OAAAA,CAAMuB,SAAS,UAAUC,QAAQ,UAAUC,GAAG,YAC7CP,GACClB,EAAAA,cAAAA,OAAAA,CAAMuB,SAAS,4BAA4BC,QAASN,IAlBrD,C","sources":["webpack://tetov-xyz/./src/pages/{MarkdownRemark.fields__slug}.tsx"],"sourcesContent":["import { graphql, HeadFC, PageProps } from \"gatsby\";\nimport * as React from \"react\";\nimport type { ArticleProp } from \"src/components/article\";\nimport Article from \"src/components/article\";\nimport { Head as HeadComponent } from \"src/components/head\";\nimport Layout from \"src/components/layout\";\n\ntype GatsbyMarkdownPage = React.FC<PageProps<Queries.MarkdownPageQuery>>;\n\nconst MarkdownPage: GatsbyMarkdownPage = (props) => {\n  const category = props.data.markdownRemark?.fields?.category;\n\n  if (!category) {\n    throw new Error(\"No category set on node's fields.\");\n  }\n\n  const articlePropMapping: { [key: string]: Partial<ArticleProp> } = {\n    posts: {\n      articleClass: \"h-entry\",\n      articleType: \"BlogEntry\",\n      bodyItemProp: \"articleBody\",\n      date: props.data.markdownRemark?.frontmatter.date,\n    },\n    projs: {\n      articleClass: \"h-entry\",\n      articleType: \"CreativeWork\",\n      bodyItemProp: \"about\",\n    },\n  };\n\n  const articleProp = articlePropMapping[category];\n\n  if (!articleProp) {\n    throw new Error(`No matching articleProp for category: ${category}`);\n  }\n\n  const markdownRemark = props.data.markdownRemark;\n\n  return (\n    <Layout>\n      <Article\n        pathname={props.location.pathname}\n        html={markdownRemark.html}\n        title={markdownRemark.frontmatter.title}\n        bannerImageData={\n          markdownRemark.frontmatter.image?.childImageSharp?.bannerImgData\n        }\n        imageAlt={markdownRemark?.frontmatter.imageAlt || undefined}\n        {...articleProp}\n      />\n    </Layout>\n  );\n};\n\nexport default MarkdownPage;\n\nexport const Head: HeadFC<Queries.MarkdownPageQuery> = ({\n  location: { pathname },\n  data: {\n    markdownRemark: { frontmatter, excerpt },\n  },\n}) => {\n  const imageUrl = frontmatter.image;\n  const pageDate = frontmatter.machineReadableDate;\n\n  return (\n    <HeadComponent\n      pathname={pathname}\n      imageUrl={imageUrl}\n      pageTitle={frontmatter.title}\n      description={frontmatter.description || excerpt || \"\"}\n    >\n      <meta property=\"og:type\" content=\"article\" id=\"og:type\" />\n      {pageDate && (\n        <meta property=\"og:article:published_time\" content={pageDate} />\n      )}\n    </HeadComponent>\n  );\n};\n\nexport const query = graphql`\n  query MarkdownPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      excerpt(pruneLength: 160, format: PLAIN)\n      id\n      html\n      fields {\n        slug\n        category\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        machineReadableDate: date\n        description\n        lang\n        imageAlt\n        image {\n          ...BannerImg\n        }\n      }\n    }\n  }\n`;\n"],"names":["props","category","data","markdownRemark","_props$data$markdownR","fields","_props$data$markdownR2","Error","articleProp","posts","articleClass","articleType","bodyItemProp","date","_props$data$markdownR3","frontmatter","projs","React","Layout","Article","pathname","location","html","title","bannerImageData","image","_markdownRemark$front","childImageSharp","_markdownRemark$front2","bannerImgData","imageAlt","undefined","Head","excerpt","imageUrl","pageDate","machineReadableDate","HeadComponent","pageTitle","description","property","content","id"],"sourceRoot":""}