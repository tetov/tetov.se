{"version":3,"sources":["webpack://tetov-xyz/./src/components/content-preview.tsx","webpack://tetov-xyz/./src/components/hero-proj.tsx","webpack://tetov-xyz/./src/pages/index.tsx"],"names":["excerpt","fields","slug","previewImg","heroImg","frontmatter","title","description","url","className","Link","to","G","alt","image","loading","heroImgData","data","location","contentNodes","allMarkdownRemark","nodes","heroProj","projNodes","map","node","key","id"],"mappings":"0LAmCA,EA/BqE,SAAC,GAO/D,IANLA,EAMI,EANJA,QAMI,IALJC,OACEC,EAIE,EAJFA,KACWC,EAGT,EAHFC,QAAWD,WAGT,IADJE,YAAeC,EACX,EADWA,MAAOC,EAClB,EADkBA,YAEhBC,EAAG,IAAON,EAAP,QACT,OACE,2BACE,uBAAKO,UAAU,QACb,gBAAC,EAAAC,KAAD,CAAMC,GAAIH,GACR,gBAAC,EAAAI,EAAD,CACEC,IAAG,mBAAqBP,EACxBQ,MAAOX,EACPY,QAAQ,WAId,sBAAIN,UAAU,8BACZ,gBAAC,EAAAC,KAAD,CAAMC,GAAIH,EAAKC,UAAU,kBACtBH,IAGL,uBAAKG,UAAU,QACb,qBAAGA,UAAU,gCAAgCF,GAAeP,MCYpE,EAtCyD,SAAC,GAOnD,IANLA,EAMI,EANJA,QAMI,IALJC,OACEC,EAIE,EAJFA,KACWc,EAGT,EAHFZ,QAAWY,YAGT,IADJX,YAAeC,EACX,EADWA,MAAOC,EAClB,EADkBA,YAEhBC,EAAG,IAAON,EAAP,QACT,OACE,+BACE,uBAAKO,UAAU,iBACb,gBAAC,EAAAC,KAAD,CAAMC,GAAIH,EAAKC,UAAU,kBACvB,gBAAC,EAAAG,EAAD,CACEC,IAAG,mBAAqBP,EACxBQ,MAAOE,EACPD,QAAQ,YAId,uBAAKN,UAAU,gEACb,2BACE,sBAAIA,UAAU,2CACZ,gBAAC,EAAAC,KAAD,CAAMC,GAAIH,EAAKC,UAAU,kBACtBH,KAIP,2BACE,qBAAGG,UAAU,gCACVF,GAAeP,O,UCH5B,EAxB0D,SAAC,GAGpD,IAFLiB,EAEI,EAFJA,KACAC,EACI,EADJA,SAEMC,EAAeF,EAAKG,kBAAkBC,MAErCC,EAA0BH,EAH7B,GAGgBI,EAAaJ,EAH7B,SAQJ,OACE,gBAAC,IAAD,CAAQD,SAAUA,GAChB,gBAAC,EAAaI,GAEd,uBAAKb,UAAU,qFACZc,EAAUC,KAAI,SAACC,GAAD,OACb,gBAAC,EAAD,eAAgBC,IAAKD,EAAKE,IAAQF","file":"component---src-pages-index-tsx-25fe2fc3e4449ebd3fda.js","sourcesContent":["import { graphql, Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport React from \"react\"\n\nconst ContentPreview: React.FC<GatsbyTypes.ContentPreviewFragment> = ({\n  excerpt,\n  fields: {\n    slug,\n    heroImg: { previewImg },\n  },\n  frontmatter: { title, description },\n}) => {\n  const url = `/${slug}#proj`\n  return (\n    <div>\n      <div className=\"mb-5\">\n        <Link to={url}>\n          <GatsbyImage\n            alt={`Cover image for ${title}`}\n            image={previewImg}\n            loading=\"lazy\"\n          />\n        </Link>\n      </div>\n      <h2 className=\"text-3xl mb-3 leading-snug\">\n        <Link to={url} className=\"link-style-alt\">\n          {title}\n        </Link>\n      </h2>\n      <div className=\"mb-4\">\n        <p className=\"text-lg leading-relaxed mb-4\">{description || excerpt}</p>\n      </div>\n    </div>\n  )\n}\nexport default ContentPreview\n\nexport const fragmen = graphql`\n  fragment ContentPreview on MarkdownRemark {\n    ...ProjMetaData\n    fields {\n      heroImg {\n        previewImg: gatsbyImageData(\n          width: 684\n          aspectRatio: 1.33\n          placeholder: BLURRED\n          transformOptions: { cropFocus: CENTER }\n        )\n      }\n    }\n  }\n`\n","import { graphql, Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport React from \"react\"\n\nconst HeroProj: React.FC<GatsbyTypes.HeroProjFragment> = ({\n  excerpt,\n  fields: {\n    slug,\n    heroImg: { heroImgData },\n  },\n  frontmatter: { title, description },\n}) => {\n  const url = `/${slug}#proj`\n  return (\n    <section>\n      <div className=\"mb-8 md:mb-16\">\n        <Link to={url} className=\"link-style-alt\">\n          <GatsbyImage\n            alt={`Cover image for ${title}`}\n            image={heroImgData}\n            loading=\"eager\"\n          />\n        </Link>\n      </div>\n      <div className=\"md:grid md:grid-cols-2 md:gap-x-16 lg:gap-x-8 mb-20 md:mb-28\">\n        <div>\n          <h2 className=\"mb-4 text-4xl lg:text-6xl leading-tight\">\n            <Link to={url} className=\"link-style-alt\">\n              {title}\n            </Link>\n          </h2>\n        </div>\n        <div>\n          <p className=\"text-lg leading-relaxed mb-4\">\n            {description || excerpt}\n          </p>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default HeroProj\n\nexport const HeroProjFragment = graphql`\n  fragment HeroProj on MarkdownRemark {\n    ...ProjMetaData\n    fields {\n      heroImg {\n        ...HeroImg\n      }\n    }\n  }\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\n\nimport ContentPreview from \"../components/content-preview\"\nimport HeroProj from \"../components/hero-proj\"\nimport Layout from \"../components/layout\"\n\nconst Index: GatsbyPage<GatsbyTypes.IndexQuery, string> = ({\n  data,\n  location,\n}) => {\n  const contentNodes = data.allMarkdownRemark.nodes\n\n  const [heroProj, ...projNodes] = contentNodes\n  // const [heroProj, ...projNodes] = contentNodes.filter(\n  // (node) => node.fields.category == \"proj\"\n  // )\n\n  return (\n    <Layout location={location}>\n      <HeroProj {...heroProj} />\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-x-16 lg:gap-x-32 gap-y-20 md:gap-y-32 mb-8\">\n        {projNodes.map((node) => (\n          <ContentPreview key={node.id} {...node} />\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Index\n\n// Query with /(DIR)/\nexport const pageQuery = graphql`\n  query Index {\n    allMarkdownRemark(\n      filter: { fields: { category: { eq: \"projs\" } } }\n      sort: { fields: [frontmatter___weight], order: DESC }\n      limit: 7\n    ) {\n      nodes {\n        id\n        ...ContentPreview\n        ...HeroProj\n      }\n    }\n  }\n`\n"],"sourceRoot":""}