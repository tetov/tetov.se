{"version":3,"file":"component---src-pages-markdown-remark-fields-slug-tsx-61166db40bcbcd12667a.js","mappings":"2MAuDA,UA7CyC,SAACA,GAAU,cAC5CC,EAAoC,QAA5B,EAAGD,EAAME,KAAKC,sBAAc,OAAQ,QAAR,EAAzBC,EAA2BC,cAAM,WAAR,EAAzBC,EAAmCL,SAEpD,IAAKA,EACH,MAAM,IAAIM,MAAM,qCAGlB,IAcMC,EAd8D,CAClEC,MAAO,CACLC,aAAc,UACdC,YAAa,YACbC,aAAc,cACdC,KAA+B,QAA3B,EAAEb,EAAME,KAAKC,sBAAc,aAAzBW,EAA2BC,YAAYF,MAE/CG,MAAO,CACLN,aAAc,UACdC,YAAa,eACbC,aAAc,UAIqBX,GAEvC,IAAKO,EACH,MAAM,IAAID,MAAM,yCAAyCN,GAG3D,IAAME,EAAiBH,EAAME,KAAKC,eAElC,OACEc,EAAAA,cAACC,EAAAA,EAAM,CAACC,SAAUnB,EAAMoB,SAASD,UAC/BF,EAAAA,cAACI,EAAAA,GAAO,eACNF,SAAUnB,EAAMoB,SAASD,SACzBG,KAAMnB,EAAemB,KACrBC,MAAOpB,EAAeY,YAAYQ,MAClCC,gBACkC,QADnB,EACbrB,EAAeY,YAAYU,aAAK,OAAiB,QAAjB,EAAhCC,EAAkCC,uBAAe,WAAjB,EAAhCC,EAAmDC,cAErDC,UAAU3B,aAAc,EAAdA,EAAgBY,YAAYe,gBAAYC,GAC9CvB,IAIZ,EAIO,IAAMwB,EAA0C,SAAH,OACtCb,EAAQ,EAApBC,SAAYD,SAAQc,EAAAA,EACpB/B,KACEC,eAAc+B,EAAAA,EACZnB,YAAeQ,EAAK,EAALA,MAAOY,EAAW,EAAXA,YAAaV,EAAK,EAALA,MAAOW,EAAmB,EAAnBA,oBAC1CC,EAAO,EAAPA,QAAO,OAIXpB,EAAAA,cAACqB,EAAAA,EAAa,CACZnB,SAAUA,EACVoB,UAAUC,EAAAA,EAAAA,GAAOf,GACjBgB,UAAWlB,EACXY,YAAaA,GAAeE,GAAW,IAEvCpB,EAAAA,cAAAA,OAAAA,CAAMyB,SAAS,UAAUC,QAAQ,UAAUC,GAAG,YAC7CR,GACCnB,EAAAA,cAAAA,OAAAA,CACEyB,SAAS,4BACTC,QAASP,IAGC,C","sources":["webpack://tetov-xyz/./src/pages/{MarkdownRemark.fields__slug}.tsx"],"sourcesContent":["import { graphql, HeadFC, PageProps } from \"gatsby\";\nimport { getSrc } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\nimport type { ArticleProp } from \"src/components/article\";\nimport {Article} from \"src/components/article\";\nimport HeadComponent from \"src/components/head\";\nimport Layout from \"src/components/layout\";\n\ntype GatsbyMarkdownPage = React.FC<PageProps<Queries.MarkdownPageQuery>>;\n\nconst MarkdownPage: GatsbyMarkdownPage = (props) => {\n  const category = props.data.markdownRemark?.fields?.category;\n\n  if (!category) {\n    throw new Error(\"No category set on node's fields.\");\n  }\n\n  const articlePropMapping: { [key: string]: Partial<ArticleProp> } = {\n    posts: {\n      articleClass: \"h-entry\",\n      articleType: \"BlogEntry\",\n      bodyItemProp: \"articleBody\",\n      date: props.data.markdownRemark?.frontmatter.date,\n    },\n    projs: {\n      articleClass: \"h-entry\",\n      articleType: \"CreativeWork\",\n      bodyItemProp: \"about\",\n    },\n  };\n\n  const articleProp = articlePropMapping[category];\n\n  if (!articleProp) {\n    throw new Error(`No matching articleProp for category: ${category}`);\n  }\n\n  const markdownRemark = props.data.markdownRemark;\n\n  return (\n    <Layout pathname={props.location.pathname}>\n      <Article\n        pathname={props.location.pathname}\n        html={markdownRemark.html}\n        title={markdownRemark.frontmatter.title}\n        bannerImageData={\n          markdownRemark.frontmatter.image?.childImageSharp?.bannerImgData\n        }\n        imageAlt={markdownRemark?.frontmatter.imageAlt || undefined}\n        {...articleProp}\n      />\n    </Layout>\n  );\n};\n\nexport default MarkdownPage;\n\nexport const Head: HeadFC<Queries.MarkdownPageQuery> = ({\n  location: { pathname },\n  data: {\n    markdownRemark: {\n      frontmatter: { title, description, image, machineReadableDate },\n      excerpt,\n    },\n  },\n}) => (\n  <HeadComponent\n    pathname={pathname}\n    imageUrl={getSrc(image)}\n    pageTitle={title}\n    description={description || excerpt || \"\"}\n  >\n    <meta property=\"og:type\" content=\"article\" id=\"og:type\" />\n    {machineReadableDate && (\n      <meta\n        property=\"og:article:published_time\"\n        content={machineReadableDate}\n      />\n    )}\n  </HeadComponent>\n);\n\nexport const query = graphql`\n  query MarkdownPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      excerpt(pruneLength: 160, format: PLAIN)\n      id\n      html\n      fields {\n        slug\n        category\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        machineReadableDate: date\n        description\n        lang\n        imageAlt\n        image {\n          ...BannerImg\n        }\n      }\n    }\n  }\n`;\n"],"names":["props","category","data","markdownRemark","_props$data$markdownR","fields","_props$data$markdownR2","Error","articleProp","posts","articleClass","articleType","bodyItemProp","date","_props$data$markdownR3","frontmatter","projs","React","Layout","pathname","location","Article","html","title","bannerImageData","image","_markdownRemark$front","childImageSharp","_markdownRemark$front2","bannerImgData","imageAlt","undefined","Head","_ref$data$markdownRem","_ref$data$markdownRem2","description","machineReadableDate","excerpt","HeadComponent","imageUrl","getSrc","pageTitle","property","content","id"],"sourceRoot":""}